{
    // Disable welcome
    "workbench.startupEditor": "none",
    // Colorscheme
    "workbench.colorTheme": "Gruvbox Dark Hard",
    // Editor
    "editor.fontFamily": "JetBrains Mono",
    "editor.fontSize": 15,
    "editor.fontLigatures": true,
    "editor.lineHeight": 1.6,
    "editor.rulers": [80],
    "editor.minimap.enabled": false,
    "editor.renderLineHighlight": "none",
    "editor.occurrencesHighlight": "off",
    "editor.selectionHighlight": false,
    "editor.wordWrap": "on",
    "editor.lightbulb.enabled": "off",
    // "editor.renderWhitespace": "all",
    // "breadcrumbs.enabled": false,
    "workbench.tree.enableStickyScroll": false,
    "editor.stickyScroll.enabled": false,
    // Smooth
    "editor.smoothScrolling": true,
    "editor.cursorSmoothCaretAnimation": "on",
    // File
    "files.trimTrailingWhitespace": true,
    "files.trimFinalNewlines": true,
    // Icon
    "workbench.iconTheme": "symbols",
    "symbols.hidesExplorerArrows": false,
    // Window
    "window.menuBarVisibility": "toggle",
    "workbench.activityBar.location": "bottom",
    // Explorer
    "explorer.compactFolders": false,
    "workbench.tree.indent": 20,
    // Apc
    "apc.font.family": "JetBrains Mono",
    "apc.listRow": {
        "height": 24,
        "fontSize": 14,
    },
    "apc.statusBar": {
        "position": "editor-bottom",
    },
    "apc.stylesheet": {
        ".title-actions": "display: none !important",
        ".editor-actions": "display: none !important",
        ".scrollbar": "display: none !important",
        ".decorationsOverviewRuler": "display: none !important",
        ".monaco-workbench": "--vscode-editorLineNumber-activeForeground: #fabd2f !important",
        ".relative-current-line-number": "font-weight: bold !important",
    },
    // Custom color
    "workbench.colorCustomizations": {
        // Error lens
        "errorLens.errorBackground": "#00000000",
        "errorLens.warningBackground": "#00000000",
        "errorLens.infoBackground": "#00000000",
        "errorLens.hintBackground": "#00000000",
        // Cursor
        "editorCursor.foreground": "#fabd2f",
        "editorCursor.background": "#1d2021",
        // Editor
        "editor.background": "#000000",
        "sideBar.background": "#000000",
        "statusBar.background": "#000000",
        "terminal.background": "#000000",
        // Tab
        "tab.activeBorder": "#fabd2f",
        "tab.inactiveBackground": "#000000",
        "tab.activeBackground": "#000000",
        "editorGroupHeader.tabsBackground": "#000000",
        // Fuzzy file
        "quickInput.background": "#000000",
        // Autocomplete
        "editorSuggestWidget.background": "#000000",
        // Explorer
        "list.focusOutline": "#ebdbb2",
        "list.focusBackground": "#000000",
        "list.inactiveSelectionBackground": "#000000",
        "list.inactiveSelectionForeground": "#dbdbb2",
        // Tooltip
        "editorHoverWidget.background": "#000000"
    },
    // Error lens
    "errorLens.gutterIconsEnabled": true,
    "errorLens.messageTemplate": "‚óè $message",
    // Vim
    "vim.leader": "<space>",
    "vim.easymotion": true,
    "vim.useCtrlKeys": true,
    "vim.incsearch": true,
    "vim.hlsearch": true,
    "vim.useSystemClipboard": false,
    "vim.smartRelativeLine": true,
    "extensions.experimental.affinity": {
        "vscodevim.vim": 1
    },
    "vim.normalModeKeyBindings": [
        // Find
        {
            "before": ["<leader>", "f", "f"],
            "commands": ["workbench.action.quickOpen"]
        },
        {
            "before": ["<leader>", "f", "c"],
            "commands": ["workbench.action.showCommands"]
        },
        {
            "before": ["<leader>", "f", "b"],
            "commands": ["workbench.action.showAllEditors"]
        },
        {
            "before": ["<leader>", "f", "s"],
            "commands": ["workbench.action.gotoSymbol"]
        },
        // Jump
        {
            "before": ["j"],
            "after": ["j", "z", "z"]
        },
        {
            "before": ["k"],
            "after": ["k", "z", "z"]
        },
        {
            "before": ["J"],
            "after": [5, "j", "z", "z"]
        },
        {
            "before": ["K"],
            "after": [5, "k", "z", "z"]
        },
        // Search
        {
            "before": ["<leader>", "Enter"],
            "commands": [":nohlsearch"]
        },
        {
            "before": ["n"],
            "after": ["n", "z", "z"]
        },
        {
            "before": ["N"],
            "after": ["N", "z", "z"]
        },
        // Paste
        {
            "before": ["<leader>", "p"],
            "after": ["\"", "+", "p"]
        },
        // Split
        {
            "before": ["<leader>", "_"],
            "commands": [":split"]
        },
        {
            "before": ["<leader>", "|"],
            "commands": [":vsplit"]
        },
        // Jump change
        {
            "before": ["]", "c"],
            "commands": ["workbench.action.editor.nextChange"],
        },
        {
            "before": ["[", "c"],
            "commands": ["workbench.action.editor.previousChange"],
        },
        // Lsp
        {
            "before": ["g", "d"],
            "commands": ["editor.action.revealDefinition"]
        },
        {
            "before": ["g", "i"],
            "commands": ["editor.action.goToImplementation"]
        },
        {
            "before": ["g", "r"],
            "commands": ["editor.action.goToReferences"]
        },
        {
            "before": ["g", "b"],
            "commands": ["workbench.action.navigateBack"]
        },
        {
            "before": ["g", "f"],
            "commands": ["workbench.action.navigateForward"]
        },
        {
            "before": ["]", "d"],
            "commands": ["editor.action.marker.next"]
        },
        {
            "before": ["[", "d"],
            "commands": ["editor.action.marker.prev"]
        },
        {
            "before": ["<leader>", "h"],
            "commands": ["editor.action.showHover"]
        },
        {
            "before": ["<leader>", "c", "a"],
            "commands": ["editor.action.quickFix"]
        },
        {
            "before": ["<leader>", "r", "n"],
            "commands": ["editor.action.rename"]
        },
        {
            "before": ["<leader>", "f", "m"],
            "commands": ["editor.action.formatDocument"]
        },
        // Cursor next match
        {
            "before": ["<leader>", "c", "m"],
            "commands": ["editor.action.addSelectionToNextFindMatch"]
        },
        // Debug
        {
            "before": ["<leader>", "d", "b"],
            "commands": ["editor.debug.action.toggleBreakpoint"]
        },
        {
            "before": ["<leader>", "d", "c"],
            "commands": ["workbench.action.debug.start"]
        },
        {
            "before": ["<leader>", "d", "r"],
            "commands": ["workbench.action.debug.restart"]
        },
        {
            "before": ["<leader>", "d", "s"],
            "commands": ["workbench.action.debug.stop"],
        },
        {
            "before": ["<leader>", "d", "i"],
            "commands": ["workbench.action.debug.stepInto"],
        },
        {
            "before": ["<leader>", "d", "O"],
            "commands": ["workbench.action.debug.stepOver"],
        },
        {
            "before": ["<leader>", "d", "o"],
            "commands": ["workbench.action.debug.stepOut"],
        },
        {
            "before": ["<leader>", "d", "e"],
            "commands": ["editor.debug.action.showDebugHover"],
        },
        // Copy path
        {
            "before": ["<leader>", "c", "p"],
            "commands": ["copyRelativeFilePath"]
        },
    ],
    "vim.visualModeKeyBindings": [
        // Indent
        {
            "before": [">"],
            "after": [">", "g", "v"]
        },
        {
            "before": ["<"],
            "after": ["<", "g", "v"]
        },
        // Copy & Paste
        {
            "before": ["<leader>", "p"],
            "after": ["\"", "+", "p"]
        },
        {
            "before": ["<leader>", "y"],
            "after": ["\"", "+", "y"]
        },
        // Cursor next match
        {
            "before": ["<leader>", "c", "m"],
            "commands": ["editor.action.addSelectionToNextFindMatch"]
        },
    ],
}
